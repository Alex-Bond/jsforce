name: tests
on:
  push:
    branches-ignore: [2.0]
  workflow_dispatch:

jobs:
  # test-browser:
  #   needs: yarn-lockfile-check
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: browser-actions/setup-chrome@v1
  #       with:
  #         chrome-version: stable
  #       id: setup-chrome
  #     - run: |
  #         echo Installed Chrome version: ${{ steps.setup-chrome.outputs.chrome-version }}
  #         ${{ steps.setup-chrome.outputs.chrome-path }} --version
  #
  #         CHROME_VERSION=$(echo "${{ steps.setup-chrome.outputs.chrome-version }}" cut -f 1 -d ' ' | cut -d '.' -f 1)
  #
  #         CHROMEDRIVER_VERSION=$(curl --location --fail --retry 10 http://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION)
  #
  #         echo "chromedriver_version=$CHROMEDRIVER_VERSION" >> "$GITHUB_ENV"
  #     - uses: nanasess/setup-chromedriver@788c980aa31e9357d8724aafa7928ce78d394422
  #       with:
  #         # nanasess/setup-chromedriver looks for `google-chrome` bin:
  #         # https://github.com/nanasess/setup-chromedriver/blob/7802dc85ecfc7fc2bac8b5e5bf057b2df439b2ed/lib/setup-chromedriver.sh#L9
  #         #
  #         # but browser-actions/setup-chrome uses different names for the binaries:
  #         # https://github.com/browser-actions/setup-chrome#usage
  #         #
  #         # Specify version to avoid mismatch with `chrome` binary.
  #         chromedriver-version: ${{ env.chromedriver_version }}
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: lts/*
  #     - run: |
  #         chromedriver --url-base=/wd/hub &
  #         sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 & # optional
  #
  #     - name: Install dependencies
  #       run: npm install
  #
  #     - name: Install sf CLI
  #       run: npm install --global @salesforce/cli
  #
  #     - name: Setup scratch org
  #       env:
  #         SF_HUB_USERNAME: ${{ secrets.SF_HUB_USERNAME }}
  #         SF_OAUTH2_CLIENT_ID: ${{ secrets.SF_OAUTH2_CLIENT_ID }}
  #         SF_OAUTH2_JWT_KEY: ${{ secrets.SF_OAUTH2_JWT_KEY }}
  #       run: |
  #         npx zx scripts/org-setup.mjs
  #
  #     - name: Run browser tests
  #       run: |
  #         SF_USERNAME=$(sf org display user --target-org jsforce-test-org --json | jq -r '.result.username') \
  #         SF_PASSWORD=$(sf org display user --target-org jsforce-test-org --json | jq -r '.result.password') \
  #         SF_LOGIN_URL=$(sf org display user --target-org jsforce-test-org --json | jq -r '.result.instanceUrl') \
  #         DISPLAY=:99 CHROME_BIN=$(which chrome) \
  #         npm run test:browser-ci
  lockfile-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - run: |
          npm install -g lockfile-lint
          lockfile-lint --path package-lock.json --allowed-hosts npm yarn --validate-https
  
  lint-and-typecheck:
    needs: yarn-lockfile-check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*

      - name: Install dependencies
        run: npm install
  
      - name: Lint and Type Check
        run: |
          npm run lint
          npm run build:types
          npm run typecheck


  test-node-linux:
    needs: yarn-lockfile-check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node_version: [lts/-1, lts/*, latest]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}
  
      - name: Install dependencies
        run: npm install
  
      - name: Install sf CLI
        run: npm install --global @salesforce/cli
  
      - name: Setup scratch org
        env:
          SF_HUB_USERNAME: ${{ secrets.SF_HUB_USERNAME }}
          SF_OAUTH2_CLIENT_ID: ${{ secrets.SF_OAUTH2_CLIENT_ID }}
          SF_OAUTH2_JWT_KEY: ${{ secrets.SF_OAUTH2_JWT_KEY }}
        run: |
          npx zx scripts/org-setup.mjs
  
      - name: Run Node tests
        env:
          SF_OAUTH2_CLIENT_ID: ${{ secrets.SF_OAUTH2_CLIENT_ID }}
          SF_OAUTH2_CLIENT_SECRET: ${{ secrets.SF_OAUTH2_CLIENT_SECRET }}
        run: |
          SF_USERNAME=$(sf org display user --target-org jsforce-test-org --json | jq -r '.result.username') \
          SF_PASSWORD=$(sf org display user --target-org jsforce-test-org --json | jq -r '.result.password') \
          SF_LOGIN_URL=$(sf org display user --target-org jsforce-test-org --json | jq -r '.result.instanceUrl') \
          npm run test:node
  
      - name: Delete scratch org
        if: always()
        run: sf org delete scratch --target-org jsforce-test-org --no-prompt

 #  test-node-windows:
 #    needs: yarn-lockfile-check
 #    runs-on: windows-latest
 #    strategy:
 #      matrix:
 #        node_version: [lts/*]
 #      fail-fast: false
 #    steps:
 #      - uses: actions/checkout@v3
 #      - uses: actions/setup-node@v3
 #        with:
 #          node-version: ${{ matrix.node_version }}
 #
 #      - name: Install dependencies
 #        run: npm install
 #
 #      - name: Install sf CLI
 #        run: npm install --global @salesforce/cli
 #
 #      - name: Setup scratch org
 #        env:
 #          SF_HUB_USERNAME: ${{ secrets.SF_HUB_USERNAME }}
 #          SF_OAUTH2_CLIENT_ID: ${{ secrets.SF_OAUTH2_CLIENT_ID }}
 #          SF_OAUTH2_JWT_KEY: ${{ secrets.SF_OAUTH2_JWT_KEY }}
 #        run: |
 #          npx zx scripts/org-setup.mjs
 #
 #      - name: Run Node tests
 #        env:
 #          SF_OAUTH2_CLIENT_ID: ${{ secrets.SF_OAUTH2_CLIENT_ID }}
 #          SF_OAUTH2_CLIENT_SECRET: ${{ secrets.SF_OAUTH2_CLIENT_SECRET }}
 #        run: |
 #          $env:SF_USERNAME=$(sf org display user --target-org jsforce-test-org --json | jq -r '.result.username') `
 #          $env:SF_PASSWORD=$(sf org display user --target-org jsforce-test-org --json | jq -r '.result.password') `
 #          $env:SF_LOGIN_URL=$(sf org display user --target-org jsforce-test-org --json | jq -r '.result.instanceUrl') `
 #          npm run test:node
 #
 #      - name: Delete scratch org
 #        if: always()
 #        run: sf org delete scratch --target-org jsforce-test-org --no-prompt
 # 
